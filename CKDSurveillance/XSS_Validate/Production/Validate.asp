<!--<meta http-equiv="Content-Type" content="text/html;charset=UTF-8">-->
<%
If trim(XSS_Validated) = "" then
	XSS_Validated = "Y"
	
	'Removed on 04/13/07 based on the collective decision taken by the security implementation team. It was removed to eliminate the syntax error generated by VBScript when the this file is called twice in the same page.
	'Dim objRE 
		
	'Set objRE = Server.CreateObject("VBScript.RegExp")
	Set objRE = New RegExp
	
	'Call Validate
	ValidateInput "Blocked.asp", True, False 
	
	Function FoundSuspectTags(Byval InputString, Byval chkCSS, Byval chkSQLInj, ByVal chkQueryStr)
		
		
		'Response.Write "Called RegExp"
		'Response.End
		
		Dim REPattern
		
		'Closing and opening angled brackets; forward slash; alphanumeric string inside the tag or its hex equivalent
		If cbool(chkCSS) Then
			REPattern = "(?:(\%3C)|<|(&lt;)|(\+ADw-)|(\+ADz-)|(\+AD4APA-)).+(?:(\%3E)|>|(&gt;)|(\+AD4-)|(\+AD7-))"
			REPattern = REPattern & "|" & "\s*(?:javascript|vbscript|charset|0x0d|LF|0x0a|%0d|%0a|content-type|content-length)\s*"
			REPattern = REPattern & "|" & chr(10) & "|" & chr(13)
			
			'Javascript events
			REPattern = REPattern & "|" & "\s*(?:onAbort\s*=|onBlur\s*=|onChange\s*=|onClick\s*=|onDblClick\s*=|onDragDrop\s*=|onError\s*=|onFocus\s*=|onKeyDown\s*=|onKeyPress\s*=|onKeyUp\s*=|onLoad\s*=|onMouseDown\s*=|onMouseMove\s*=|onMouseOut\s*=|onMouseOver\s*=|onMouseUp\s*=|onMove\s*=|onReset\s*=|onResize\s*=|onSelect\s*=|onSubmit\s*=|onUnload\s*=)\s*"		
			
			'Javascript functions
			REPattern = REPattern & "|" & "\s*(?:escape\s*\(|eval\s*\(|unescape\s*\(|isFinite\s*\(|isNaN\s*\(|parseFloat\s*\(|parseInt\s*\(|taint\s*\(|untaint\s*\(|alert\s*\(|blur\s*\(|clearInterval\s*\(|clearTimeout\s*\(|close\s*\(|confirm\s*\(|createPopup\s*\(|focus\s*\(|moveBy\s*\(|moveTo\s*\(|open\s*\(|print\s*\(|prompt\s*\(|resizeBy\s*\(|resizeTo\s*\(|scrollBy\s*\(|scrollTo\s*\(|setInterval\s*\(|setTimeout\s*\(|atob\s*\(|back\s*\(|btoa\s*\(|captureEvents\s*\(|crypto\.random\s*\(|crypto\.signText\s*\(|disableExternalCapture\s*\(|enableExternalCapture\s*\(|enableExternalCapture\s*\(|find\s*\(|forward\s*\(|handleEvent\s*\(|home\s*\(|releaseEvents\s*\(|routeEvent\s*\(|setHotKeys\s*\(|setResizable\s*\(|setZOptions\s*\(|reset\s*\(|submit\s*\()\s*"			
			
			'VBscript functions
			REPattern = REPattern & "|" & "\s*(?:Abs\s*\(|Array\s*\(|Asc\s*\(|Atn\s*\(|CBool\s*\(|CByte\s*\(|CCur\s*\(|CDate\s*\(|CDbl\s*\(|Chr\s*\(|CInt\s*\(|CLng\s*\(|Cos\s*\(|CreateObject\s*\(|CSng\s*\(|CStr\s*\(|DateAdd\s*\(|DateDiff\s*\(|DatePart\s*\(|DateSerial\s*\(|DateValue\s*\(|Day\s*\(|Eval\s*\(|Exp\s*\(|Filter\s*\(|Fix\s*\(|FormatCurrency\s*\(|FormatDateTime\s*\(|FormatNumber\s*\(|FormatPercent\s*\(|GetLocale\s*\(|GetObject\s*\(|GetRef\s*\(|Hex\s*\(|Hour\s*\(|InputBox\s*\(|InStr\s*\(|InStrRev\s*\(|Int\s*\(|IsArray\s*\(|IsDate\s*\(|IsEmpty\s*\(|IsNull\s*\(|IsNumeric\s*\(|IsObject\s*\(|Join\s*\(|LBound\s*\(|LCase\s*\(|Left\s*\(|Len\s*\(|LoadPicture\s*\(|Log\s*\(|LTrim\s*\(|Mid\s*\(|Minute\s*\(|Month\s*\(|MonthName\s*\(|MsgBox\s*\(|Now\s*\(|Oct\s*\(|Replace\s*\(|RGB\s*\(|Right\s*\(|Rnd\s*\(|Round\s*\(|RTrim\s*\(|ScriptEngine|ScriptEngineBuildVersion|ScriptEngineMajorVersion|ScriptEngineMinorVersion|Second\s*\(|Sgn\s*\(|Sin\s*\(|Space\s*\(|Split\s*\(|Sqr\s*\(|StrComp\s*\(|String\s*\(|StrReverse\s*\(|Tan\s*\(|Time\s*\(|Timer\s*\(|TimeSerial\s*\(|TimeValue\s*\(|Trim\s*\(|TypeName\s*\(|UBound\s*\(|UCase\s*\(|VarType\s*\(|Weekday\s*\(|WeekdayName\s*\(|Year\s*\()\s*" 

			'Check this pattern only for the QueryStrings
			If cbool(chkQueryStr) then
				REPattern = REPattern & "|" & "(http\://|https\://|ftp\://|www.)([^ ]+)(. | |\)|\'|$)" 
			End if			
		End if
				
		'Pattern for SQL Injection
		'SQL Meta-Characters like = (Equal), ' (Single quote), -- (Double Dash), ; (Semi-colon)
		'REPattern = REPattern & "|" & "((\%3D)|(=))[^\n]*((\%27)|(\')|(\-\-)|(\%3B)|(;))"
		If cbool(chkSQLInj) then
			REPattern = REPattern & "|" & "((\%27)|(\')|(\-\-)|(\%3B)|(;))"
					
			'Zero or more alphanumeric or underscore characters, single-quote or its hex equivalent, 
			'the word 'or' with various combinations of its upper and lower case hex equivalents.
			'REPattern = REPattern & "|" & "\w*((\%27)|(\'))((\%6F)|o|(\%4F))((\%72)|r|(\%52))"
		
			'Union, Select, Insert, Update, Delete, Drop
			'REPattern = REPattern & "|" & "((\%27)|(\'))union"
			'REPattern = REPattern & "|" & "((\%27)|(\'))select"
			'REPattern = REPattern & "|" & "((\%27)|(\'))insert"
			'REPattern = REPattern & "|" & "((\%27)|(\'))update"
			'REPattern = REPattern & "|" & "((\%27)|(\'))delete"
			'REPattern = REPattern & "|" & "((\%27)|(\'))drop"
		
			'Exec, sp, xp, underscore used in stored procedures
			'REPattern = REPattern & "|" & "exec(\s|\+)+(s|x)p\w+"
		End if
		'Response.Write "REPattern=" & REPattern & "<BR>"
		
		'Response.Write "InputString: " & InputString & "<BR>"
		
		objRE.Pattern = REPattern
			
		objRE.IgnoreCase = True 'ignore case of string
		objRE.Global = False 'stop on first hit

		FoundSuspectTags = objRE.Test(InputString)
		
		
	End Function
	
	Public Sub ValidateInput(Byval BlockedPage, Byval chkCSS, Byval chkSQLInj)
		'Loop thru Forms Collection
		Dim frmItem, iCount
		Dim iNameValue
		
		If trim(chkCSS) = "" OR IsNULL(chkCSS) then
			chkCSS = True
		End if
		
		If trim(chkSQLInj) = "" OR IsNULL(chkSQLInj) then
			chkSQLInj = True
		End if
				
		For each frmItem in Request.Form
			For iCount = 1 to Request.Form(frmItem).Count
				iNameValue = cstr(frmItem) & "=" & Request.Form(frmItem)(iCount)
				If FoundSuspectTags(iNameValue, chkCSS, chkSQLInj, False) then
					'Response.End
					Set objRE = Nothing
					If trim(BlockedPage) <> "" then
						Response.Redirect BlockedPage
					Else
						Response.End	
					End if					
				End if
			Next
		Next
		
		'Loop thru QueryString Collection
		Dim qryItem		
		For each qryItem in Request.QueryString
			For iCount = 1 to Request.QueryString(qryItem).Count
				iNameValue = cstr(qryItem) & "=" & Request.QueryString(qryItem)(iCount)
				'Response.Write "iNameValue " & iNameValue & "<BR>"
				If FoundSuspectTags(iNameValue, chkCSS, chkSQLInj, True) then
					'Response.End
					Set objRE = Nothing
					If trim(BlockedPage) <> "" then
						Response.Redirect BlockedPage
					Else
						Response.End
					End if
				End if
			Next
		Next
		
		'Loop thru Cookies Collection
		Dim ckItem, ckItemKey
		For each ckItem in Request.Cookies
			If Request.Cookies(ckItem).HasKeys then
				For each ckItemKey in Request.Cookies(ckItem)
					If Instr(1,Request.Cookies(ckItem)(ckItemKey),"apstoken=",1) = 0 then
						If FoundSuspectTags(Request.Cookies(ckItem)(ckItemKey), chkCSS, chkSQLInj, False)  and Instr(1,Request.Cookies(ckItem),"cdcgov",1) = 0 then
							'Response.End
							Set objRE = Nothing
							If trim(BlockedPage) <> "" then
								Response.Redirect BlockedPage
							Else
								Response.End
							End if
						End if
					End if
				Next			
			Else
				If Instr(1,Request.Cookies(ckItem),"apstoken=",1) = 0 then
					If FoundSuspectTags(Request.Cookies(ckItem), chkCSS, chkSQLInj, False)  and Instr(1,Request.Cookies(ckItem),"cdcgov",1) = 0 then
						'Response.End
						Set objRE = Nothing
						If trim(BlockedPage) <> "" then
							Response.Redirect BlockedPage
						Else
							Response.End
						End if
					End if
				End if
			End if 
		Next
		
		'Response.Write "<H3>No Errors were found.</H3>"
		
		Set objRE = Nothing
	End Sub
End if
%>
